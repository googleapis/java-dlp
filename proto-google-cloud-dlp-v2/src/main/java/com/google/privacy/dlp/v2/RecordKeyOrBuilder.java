/*
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/privacy/dlp/v2/storage.proto

package com.google.privacy.dlp.v2;

public interface RecordKeyOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.privacy.dlp.v2.RecordKey)
    com.google.protobuf.MessageOrBuilder {

  /** <code>.google.privacy.dlp.v2.DatastoreKey datastore_key = 2;</code> */
  boolean hasDatastoreKey();
  /** <code>.google.privacy.dlp.v2.DatastoreKey datastore_key = 2;</code> */
  com.google.privacy.dlp.v2.DatastoreKey getDatastoreKey();
  /** <code>.google.privacy.dlp.v2.DatastoreKey datastore_key = 2;</code> */
  com.google.privacy.dlp.v2.DatastoreKeyOrBuilder getDatastoreKeyOrBuilder();

  /** <code>.google.privacy.dlp.v2.BigQueryKey big_query_key = 3;</code> */
  boolean hasBigQueryKey();
  /** <code>.google.privacy.dlp.v2.BigQueryKey big_query_key = 3;</code> */
  com.google.privacy.dlp.v2.BigQueryKey getBigQueryKey();
  /** <code>.google.privacy.dlp.v2.BigQueryKey big_query_key = 3;</code> */
  com.google.privacy.dlp.v2.BigQueryKeyOrBuilder getBigQueryKeyOrBuilder();

  /**
   *
   *
   * <pre>
   * Values of identifying columns in the given row. Order of values matches
   * the order of field identifiers specified in the scanning request.
   * </pre>
   *
   * <code>repeated string id_values = 5;</code>
   */
  java.util.List<java.lang.String> getIdValuesList();
  /**
   *
   *
   * <pre>
   * Values of identifying columns in the given row. Order of values matches
   * the order of field identifiers specified in the scanning request.
   * </pre>
   *
   * <code>repeated string id_values = 5;</code>
   */
  int getIdValuesCount();
  /**
   *
   *
   * <pre>
   * Values of identifying columns in the given row. Order of values matches
   * the order of field identifiers specified in the scanning request.
   * </pre>
   *
   * <code>repeated string id_values = 5;</code>
   */
  java.lang.String getIdValues(int index);
  /**
   *
   *
   * <pre>
   * Values of identifying columns in the given row. Order of values matches
   * the order of field identifiers specified in the scanning request.
   * </pre>
   *
   * <code>repeated string id_values = 5;</code>
   */
  com.google.protobuf.ByteString getIdValuesBytes(int index);

  public com.google.privacy.dlp.v2.RecordKey.TypeCase getTypeCase();
}
