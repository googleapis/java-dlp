/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/privacy/dlp/v2/dlp.proto

package com.google.privacy.dlp.v2;

public interface ImageTransformationsOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.privacy.dlp.v2.ImageTransformations)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated .google.privacy.dlp.v2.ImageTransformations.ImageTransformation transforms = 2;
   * </code>
   */
  java.util.List<com.google.privacy.dlp.v2.ImageTransformations.ImageTransformation>
      getTransformsList();
  /**
   * <code>repeated .google.privacy.dlp.v2.ImageTransformations.ImageTransformation transforms = 2;
   * </code>
   */
  com.google.privacy.dlp.v2.ImageTransformations.ImageTransformation getTransforms(int index);
  /**
   * <code>repeated .google.privacy.dlp.v2.ImageTransformations.ImageTransformation transforms = 2;
   * </code>
   */
  int getTransformsCount();
  /**
   * <code>repeated .google.privacy.dlp.v2.ImageTransformations.ImageTransformation transforms = 2;
   * </code>
   */
  java.util.List<
          ? extends com.google.privacy.dlp.v2.ImageTransformations.ImageTransformationOrBuilder>
      getTransformsOrBuilderList();
  /**
   * <code>repeated .google.privacy.dlp.v2.ImageTransformations.ImageTransformation transforms = 2;
   * </code>
   */
  com.google.privacy.dlp.v2.ImageTransformations.ImageTransformationOrBuilder
      getTransformsOrBuilder(int index);
}
