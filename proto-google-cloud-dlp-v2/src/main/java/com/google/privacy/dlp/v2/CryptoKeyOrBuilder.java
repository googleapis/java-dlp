/*
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/privacy/dlp/v2/dlp.proto

package com.google.privacy.dlp.v2;

public interface CryptoKeyOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.privacy.dlp.v2.CryptoKey)
    com.google.protobuf.MessageOrBuilder {

  /** <code>.google.privacy.dlp.v2.TransientCryptoKey transient = 1;</code> */
  boolean hasTransient();
  /** <code>.google.privacy.dlp.v2.TransientCryptoKey transient = 1;</code> */
  com.google.privacy.dlp.v2.TransientCryptoKey getTransient();
  /** <code>.google.privacy.dlp.v2.TransientCryptoKey transient = 1;</code> */
  com.google.privacy.dlp.v2.TransientCryptoKeyOrBuilder getTransientOrBuilder();

  /** <code>.google.privacy.dlp.v2.UnwrappedCryptoKey unwrapped = 2;</code> */
  boolean hasUnwrapped();
  /** <code>.google.privacy.dlp.v2.UnwrappedCryptoKey unwrapped = 2;</code> */
  com.google.privacy.dlp.v2.UnwrappedCryptoKey getUnwrapped();
  /** <code>.google.privacy.dlp.v2.UnwrappedCryptoKey unwrapped = 2;</code> */
  com.google.privacy.dlp.v2.UnwrappedCryptoKeyOrBuilder getUnwrappedOrBuilder();

  /** <code>.google.privacy.dlp.v2.KmsWrappedCryptoKey kms_wrapped = 3;</code> */
  boolean hasKmsWrapped();
  /** <code>.google.privacy.dlp.v2.KmsWrappedCryptoKey kms_wrapped = 3;</code> */
  com.google.privacy.dlp.v2.KmsWrappedCryptoKey getKmsWrapped();
  /** <code>.google.privacy.dlp.v2.KmsWrappedCryptoKey kms_wrapped = 3;</code> */
  com.google.privacy.dlp.v2.KmsWrappedCryptoKeyOrBuilder getKmsWrappedOrBuilder();

  public com.google.privacy.dlp.v2.CryptoKey.SourceCase getSourceCase();
}
