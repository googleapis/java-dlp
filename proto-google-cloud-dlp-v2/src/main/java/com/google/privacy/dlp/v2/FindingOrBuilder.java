/*
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/privacy/dlp/v2/dlp.proto

package com.google.privacy.dlp.v2;

public interface FindingOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.privacy.dlp.v2.Finding)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The content that was found. Even if the content is not textual, it
   * may be converted to a textual representation here.
   * Provided if `include_quote` is true and the finding is
   * less than or equal to 4096 bytes long. If the finding exceeds 4096 bytes
   * in length, the quote may be omitted.
   * </pre>
   *
   * <code>string quote = 1;</code>
   */
  java.lang.String getQuote();
  /**
   *
   *
   * <pre>
   * The content that was found. Even if the content is not textual, it
   * may be converted to a textual representation here.
   * Provided if `include_quote` is true and the finding is
   * less than or equal to 4096 bytes long. If the finding exceeds 4096 bytes
   * in length, the quote may be omitted.
   * </pre>
   *
   * <code>string quote = 1;</code>
   */
  com.google.protobuf.ByteString getQuoteBytes();

  /**
   *
   *
   * <pre>
   * The type of content that might have been found.
   * Provided if `excluded_types` is false.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.InfoType info_type = 2;</code>
   */
  boolean hasInfoType();
  /**
   *
   *
   * <pre>
   * The type of content that might have been found.
   * Provided if `excluded_types` is false.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.InfoType info_type = 2;</code>
   */
  com.google.privacy.dlp.v2.InfoType getInfoType();
  /**
   *
   *
   * <pre>
   * The type of content that might have been found.
   * Provided if `excluded_types` is false.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.InfoType info_type = 2;</code>
   */
  com.google.privacy.dlp.v2.InfoTypeOrBuilder getInfoTypeOrBuilder();

  /**
   *
   *
   * <pre>
   * Confidence of how likely it is that the `info_type` is correct.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.Likelihood likelihood = 3;</code>
   */
  int getLikelihoodValue();
  /**
   *
   *
   * <pre>
   * Confidence of how likely it is that the `info_type` is correct.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.Likelihood likelihood = 3;</code>
   */
  com.google.privacy.dlp.v2.Likelihood getLikelihood();

  /**
   *
   *
   * <pre>
   * Where the content was found.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.Location location = 4;</code>
   */
  boolean hasLocation();
  /**
   *
   *
   * <pre>
   * Where the content was found.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.Location location = 4;</code>
   */
  com.google.privacy.dlp.v2.Location getLocation();
  /**
   *
   *
   * <pre>
   * Where the content was found.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.Location location = 4;</code>
   */
  com.google.privacy.dlp.v2.LocationOrBuilder getLocationOrBuilder();

  /**
   *
   *
   * <pre>
   * Timestamp when finding was detected.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 6;</code>
   */
  boolean hasCreateTime();
  /**
   *
   *
   * <pre>
   * Timestamp when finding was detected.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 6;</code>
   */
  com.google.protobuf.Timestamp getCreateTime();
  /**
   *
   *
   * <pre>
   * Timestamp when finding was detected.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 6;</code>
   */
  com.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder();

  /**
   *
   *
   * <pre>
   * Contains data parsed from quotes. Only populated if include_quote was set
   * to true and a supported infoType was requested. Currently supported
   * infoTypes: DATE, DATE_OF_BIRTH and TIME.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.QuoteInfo quote_info = 7;</code>
   */
  boolean hasQuoteInfo();
  /**
   *
   *
   * <pre>
   * Contains data parsed from quotes. Only populated if include_quote was set
   * to true and a supported infoType was requested. Currently supported
   * infoTypes: DATE, DATE_OF_BIRTH and TIME.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.QuoteInfo quote_info = 7;</code>
   */
  com.google.privacy.dlp.v2.QuoteInfo getQuoteInfo();
  /**
   *
   *
   * <pre>
   * Contains data parsed from quotes. Only populated if include_quote was set
   * to true and a supported infoType was requested. Currently supported
   * infoTypes: DATE, DATE_OF_BIRTH and TIME.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.QuoteInfo quote_info = 7;</code>
   */
  com.google.privacy.dlp.v2.QuoteInfoOrBuilder getQuoteInfoOrBuilder();
}
